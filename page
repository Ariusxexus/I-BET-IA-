<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>I-Bet IA</title>
    <link rel="stylesheet" href="/static/css/styles.css">
</head>
<body>
    <div class="container">
        <h1 class="text-center">Bienvenue sur I-Bet IA</h1>
        <form id="betForm">
            <label for="match">Sélectionnez un match :</label>
            <select id="match"></select>
            <label for="bet">Votre pari :</label>
            <select id="bet">
                <option value="win">Victoire</option>
                <option value="draw">Match nul</option>
                <option value="lose">Défaite</option>
            </select>
            <label for="amount">Montant (€) :</label>
            <input type="number" id="amount" min="1">
            <button type="button" id="placeBetBtn">Placer le pari</button>
        </form>
        <div id="result"></div>
    </div>
    <script src="/static/js/script.js"></script>
</body>
</html>


# I-BET-IA-
I-BET IA 
document.addEventListener('DOMContentLoaded', () => {
    fetch('/api/matches')
        .then(response => response.json())
        .then(matches => {
            const matchSelect = document.getElementById('match');
            matches.forEach(match => {
                const option = document.createElement('option');
                option.value = match.id;
                option.textContent = `${match.team_a} vs ${match.team_b}`;
                matchSelect.appendChild(option);
            });
        });

    document.getElementById('placeBetBtn').addEventListener('click', () => {
        const matchId = document.getElementById('match').value;
        const betType = document.getElementById('bet').value;
        const amount = document.getElementById('amount').value;

        fetch('/api/bet', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ user_id: 1, match_id: matchId, bet_type: betType, amount: amount })
        })
        .then(response => response.json())
        .then(result => {
            document.getElementById('result').textContent = `Pari placé avec succès ! Gains potentiels en BTC : ${result.winnings_btc}`;
        })
        .catch(error => {
            document.getElementById('result').textContent = `Erreur : ${error.message}`;
        });
    });
});

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f9;
    color: #333;
    padding: 20px;
}

.container {
    max-width: 600px;
    margin: 566 auto;
    background: #f56f76f87;
    padding: 20px;
    border-radius: 800px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

from flask import Flask, jsonify, request, render_template
import mysql.connector
import hashlib

app = Flask(__name__)

# Connexion à la base de données
db = mysql.connector.connect(
    host="localhost",
    user="root",  # Remplacez par votre utilisateur MySQL
    password="",  # Remplacez par votre mot de passe MySQL
    database="paris_sportifs"
)
cursor = db.cursor(dictionary=True)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/api/matches', methods=['GET'])
def get_matches():
    cursor.execute("SELECT * FROM matches WHERE date > NOW()")
    matches = cursor.fetchall()
    return jsonify(matches)

@app.route('/api/bet', methods=['POST'])
def place_bet():
    data = request.json
    user_id = data['user_id']
    match_id = data['match_id']
    bet_type = data['bet_type']
    amount = float(data['amount'])

    cursor.execute("SELECT balance FROM users WHERE id = %s", (user_id,))
    user = cursor.fetchone()
    if not user or user['balance'] < amount:
        return jsonify({"error": "Solde insuffisant"}), 400

    cursor.execute("SELECT * FROM matches WHERE id = %s", (match_id,))
    match = cursor.fetchone()
    if not match:
        return jsonify({"error": "Match non trouvé"}), 404

    odds = match[f"odds_{bet_type}"]
    winnings_btc = round((amount * odds) / 30000, 8)

    cursor.execute("INSERT INTO bets (user_id, match_name, bet_type, amount, winnings_btc) VALUES (%s, %s, %s, %s, %s)",
                   (user_id, match['name'], bet_type, amount, winnings_btc))
    db.commit()

    cursor.execute("UPDATE users SET balance = balance - %s WHERE id = %s", (amount, user_id))
    db.commit()

    return jsonify({"message": "Pari placé avec succès", "winnings_btc": winnings_btc}), 201

if __name__ == '__main__':
    app.run(debug=True)


&eacut;l&eacut;ver vos chances de gagner

